{"ast":null,"code":"var _jsxFileName = \"D:\\\\MON_HOC\\\\MA_NGUON_MO\\\\TH_Buoi4\\\\-group-15--project\\\\frontend\\\\src\\\\auth\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useMemo, useState, useCallback, useEffect } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n\n  // Load token từ localStorage khi mount\n  useEffect(() => {\n    const t = localStorage.getItem('token');\n    const u = localStorage.getItem('user');\n    if (t) setToken(t);\n    if (u) {\n      try {\n        setUser(JSON.parse(u));\n      } catch (_) {}\n    }\n  }, []);\n  const saveAuth = useCallback((t, u) => {\n    setToken(t);\n    setUser(u);\n    if (t) localStorage.setItem('token', t);else localStorage.removeItem('token');\n    if (u) localStorage.setItem('user', JSON.stringify(u));else localStorage.removeItem('user');\n    // notify other parts (e.g., UsersContext) that login happened\n    try {\n      window.dispatchEvent(new CustomEvent('auth:login'));\n    } catch (_) {}\n  }, []);\n  const signup = useCallback(async ({\n    name,\n    email,\n    password\n  }) => {\n    const res = await api.post('/auth/signup', {\n      name,\n      email,\n      password\n    });\n    return res.data; // không trả token theo yêu cầu, chỉ trả user info\n  }, []);\n  const login = useCallback(async ({\n    email,\n    password\n  }) => {\n    const res = await api.post('/auth/login', {\n      email,\n      password\n    });\n    const {\n      token: t,\n      user: u\n    } = res.data || {};\n    // Save basic auth first so api interceptor has token available\n    saveAuth(t, u);\n    // Immediately fetch /auth/me to get the latest profile fields (avatarUrl, phone, etc.)\n    // This ensures that after logout/login the saved user contains avatarUrl persisted on server.\n    try {\n      const me = await api.get('/auth/me');\n      const full = me.data || {};\n      const merged = Object.assign({}, u || {}, full);\n      saveAuth(t, merged);\n      return merged;\n    } catch (err) {\n      // If /auth/me fails for any reason, return the original user object\n      return u;\n    }\n  }, [saveAuth]);\n  const logout = useCallback(async () => {\n    try {\n      await api.post('/auth/logout');\n    } catch (_) {/* stateless */}\n    saveAuth(null, null);\n  }, [saveAuth]);\n  const updateProfile = useCallback(async ({\n    name,\n    email,\n    phone,\n    address\n  }) => {\n    const res = await api.put('/auth/profile', {\n      name,\n      email,\n      phone,\n      address\n    });\n    const updated = res.data;\n    // update local user copy\n    // merge with existing user to avoid dropping fields like `role` that the profile endpoint may not return\n    const merged = Object.assign({}, user || {}, updated);\n    saveAuth(token, merged);\n    return updated;\n  }, [saveAuth, token, user]);\n  const uploadAvatar = useCallback(async imageDataUrl => {\n    const res = await api.post('/auth/upload-avatar', {\n      image: imageDataUrl\n    });\n    const {\n      avatarUrl\n    } = res.data || {};\n    // fetch updated profile\n    const me = await api.get('/auth/me');\n    const updated = me.data;\n    // merge with existing user to preserve fields like `role` that /auth/me may not include\n    const merged = Object.assign({}, user || {}, updated);\n    saveAuth(token, merged);\n    return {\n      avatarUrl,\n      updated\n    };\n  }, [saveAuth, token, user]);\n\n  // Export uploadAvatar so components (ProfileForm) can call it\n  const value = useMemo(() => ({\n    token,\n    user,\n    signup,\n    login,\n    logout,\n    updateProfile,\n    uploadAvatar\n  }), [token, user, signup, login, logout, updateProfile, uploadAvatar]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"k7owAw/HurdW/tGzTuRuWtMSgjU=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const ctx = useContext(AuthContext);\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\n  return ctx;\n}\n_s2(useAuth, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useMemo","useState","useCallback","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","user","setUser","t","localStorage","getItem","u","JSON","parse","_","saveAuth","setItem","removeItem","stringify","window","dispatchEvent","CustomEvent","signup","name","email","password","res","post","data","login","me","get","full","merged","Object","assign","err","logout","updateProfile","phone","address","put","updated","uploadAvatar","imageDataUrl","image","avatarUrl","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","ctx","Error","$RefreshReg$"],"sources":["D:/MON_HOC/MA_NGUON_MO/TH_Buoi4/-group-15--project/frontend/src/auth/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useMemo, useState, useCallback, useEffect } from 'react';\r\nimport api from '../api';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [token, setToken] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Load token từ localStorage khi mount\r\n  useEffect(() => {\r\n    const t = localStorage.getItem('token');\r\n    const u = localStorage.getItem('user');\r\n    if (t) setToken(t);\r\n    if (u) {\r\n      try { setUser(JSON.parse(u)); } catch (_) {}\r\n    }\r\n  }, []);\r\n\r\n  const saveAuth = useCallback((t, u) => {\r\n    setToken(t);\r\n    setUser(u);\r\n    if (t) localStorage.setItem('token', t); else localStorage.removeItem('token');\r\n    if (u) localStorage.setItem('user', JSON.stringify(u)); else localStorage.removeItem('user');\r\n    // notify other parts (e.g., UsersContext) that login happened\r\n    try { window.dispatchEvent(new CustomEvent('auth:login')); } catch (_) {}\r\n  }, []);\r\n\r\n  const signup = useCallback(async ({ name, email, password }) => {\r\n    const res = await api.post('/auth/signup', { name, email, password });\r\n    return res.data; // không trả token theo yêu cầu, chỉ trả user info\r\n  }, []);\r\n\r\n  const login = useCallback(async ({ email, password }) => {\r\n    const res = await api.post('/auth/login', { email, password });\r\n    const { token: t, user: u } = res.data || {};\r\n    // Save basic auth first so api interceptor has token available\r\n    saveAuth(t, u);\r\n    // Immediately fetch /auth/me to get the latest profile fields (avatarUrl, phone, etc.)\r\n    // This ensures that after logout/login the saved user contains avatarUrl persisted on server.\r\n    try {\r\n      const me = await api.get('/auth/me');\r\n      const full = me.data || {};\r\n      const merged = Object.assign({}, u || {}, full);\r\n      saveAuth(t, merged);\r\n      return merged;\r\n    } catch (err) {\r\n      // If /auth/me fails for any reason, return the original user object\r\n      return u;\r\n    }\r\n  }, [saveAuth]);\r\n\r\n  const logout = useCallback(async () => {\r\n    try { await api.post('/auth/logout'); } catch (_) { /* stateless */ }\r\n    saveAuth(null, null);\r\n  }, [saveAuth]);\r\n\r\n  const updateProfile = useCallback(async ({ name, email, phone, address }) => {\r\n    const res = await api.put('/auth/profile', { name, email, phone, address });\r\n    const updated = res.data;\r\n    // update local user copy\r\n    // merge with existing user to avoid dropping fields like `role` that the profile endpoint may not return\r\n    const merged = Object.assign({}, user || {}, updated);\r\n    saveAuth(token, merged);\r\n    return updated;\r\n  }, [saveAuth, token, user]);\r\n\r\n  const uploadAvatar = useCallback(async (imageDataUrl) => {\r\n    const res = await api.post('/auth/upload-avatar', { image: imageDataUrl });\r\n    const { avatarUrl } = res.data || {};\r\n    // fetch updated profile\r\n    const me = await api.get('/auth/me');\r\n    const updated = me.data;\r\n    // merge with existing user to preserve fields like `role` that /auth/me may not include\r\n    const merged = Object.assign({}, user || {}, updated);\r\n    saveAuth(token, merged);\r\n    return { avatarUrl, updated };\r\n  }, [saveAuth, token, user]);\r\n\r\n  // Export uploadAvatar so components (ProfileForm) can call it\r\n  const value = useMemo(() => ({ token, user, signup, login, logout, updateProfile, uploadAvatar }), [token, user, signup, login, logout, updateProfile, uploadAvatar]);\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n  const ctx = useContext(AuthContext);\r\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\r\n  return ctx;\r\n}\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}