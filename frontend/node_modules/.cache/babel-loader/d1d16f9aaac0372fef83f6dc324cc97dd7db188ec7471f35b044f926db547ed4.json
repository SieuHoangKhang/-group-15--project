{"ast":null,"code":"var _jsxFileName = \"D:\\\\MON_HOC\\\\MA_NGUON_MO\\\\TH_Buoi4\\\\-group-15--project\\\\frontend\\\\src\\\\UsersContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState, useCallback } from 'react';\nimport api from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersContext = /*#__PURE__*/createContext(null);\nexport function UsersProvider({\n  children\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fetchUsers = useCallback(async () => {\n    try {\n      // Only attempt to fetch users if we have a token stored (avoid 401 noise)\n      const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\n      if (!token) {\n        setUsers([]);\n        return;\n      }\n      // Only fetch user list for admin accounts. Non-admin users should not call /api/users\n      // (backend requires admin via RBAC and will return 403). This avoids noisy 403 errors.\n      let storedUser = null;\n      try {\n        storedUser = typeof window !== 'undefined' ? JSON.parse(localStorage.getItem('user') || 'null') : null;\n      } catch (_) {\n        storedUser = null;\n      }\n      const isAdmin = storedUser && String(storedUser.role || '').toLowerCase() === 'admin';\n      if (!isAdmin) {\n        // clear list for non-admins and avoid calling the protected endpoint\n        setUsers([]);\n        return;\n      }\n      setLoading(true);\n      setError('');\n      const res = await api.get('/users');\n      setUsers(res.data || []);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || (err === null || err === void 0 ? void 0 : err.message) || 'Network Error');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const addUser = useCallback(async payload => {\n    const res = await api.post('/users', payload);\n    // Refresh list after add\n    await fetchUsers();\n    return res.data;\n  }, [fetchUsers]);\n  const updateUser = useCallback(async (id, payload) => {\n    const res = await api.put(`/users/${id}`, payload);\n    await fetchUsers();\n    return res.data;\n  }, [fetchUsers]);\n  const deleteUser = useCallback(async id => {\n    const res = await api.delete(`/users/${id}`);\n    await fetchUsers();\n    return res.data;\n  }, [fetchUsers]);\n  useEffect(() => {\n    fetchUsers();\n    // Listen for auth login events so we refetch when a user logs in (useful for admin)\n    const onAuthLogin = () => fetchUsers();\n    window.addEventListener('auth:login', onAuthLogin);\n    return () => window.removeEventListener('auth:login', onAuthLogin);\n  }, [fetchUsers]);\n  return /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n    value: {\n      users,\n      loading,\n      error,\n      fetchUsers,\n      addUser,\n      updateUser,\n      deleteUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(UsersProvider, \"xP3heTGyL5KAyMDEAhBpRotxdiM=\");\n_c = UsersProvider;\nexport function useUsers() {\n  _s2();\n  const ctx = useContext(UsersContext);\n  if (!ctx) throw new Error('useUsers must be used within UsersProvider');\n  return ctx;\n}\n_s2(useUsers, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nexport default UsersContext;\nvar _c;\n$RefreshReg$(_c, \"UsersProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useCallback","api","jsxDEV","_jsxDEV","UsersContext","UsersProvider","children","_s","users","setUsers","loading","setLoading","error","setError","fetchUsers","token","window","localStorage","getItem","storedUser","JSON","parse","_","isAdmin","String","role","toLowerCase","res","get","data","err","_err$response","_err$response$data","response","message","addUser","payload","post","updateUser","id","put","deleteUser","delete","onAuthLogin","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUsers","_s2","ctx","Error","$RefreshReg$"],"sources":["D:/MON_HOC/MA_NGUON_MO/TH_Buoi4/-group-15--project/frontend/src/UsersContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, useCallback } from 'react';\r\nimport api from './api';\r\n\r\nconst UsersContext = createContext(null);\r\n\r\nexport function UsersProvider({ children }) {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchUsers = useCallback(async () => {\r\n    try {\r\n      // Only attempt to fetch users if we have a token stored (avoid 401 noise)\r\n      const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\r\n      if (!token) {\r\n        setUsers([]);\r\n        return;\r\n      }\r\n      // Only fetch user list for admin accounts. Non-admin users should not call /api/users\r\n      // (backend requires admin via RBAC and will return 403). This avoids noisy 403 errors.\r\n      let storedUser = null;\r\n      try { storedUser = typeof window !== 'undefined' ? JSON.parse(localStorage.getItem('user') || 'null') : null; } catch (_) { storedUser = null; }\r\n      const isAdmin = storedUser && String(storedUser.role || '').toLowerCase() === 'admin';\r\n      if (!isAdmin) {\r\n        // clear list for non-admins and avoid calling the protected endpoint\r\n        setUsers([]);\r\n        return;\r\n      }\r\n      setLoading(true);\r\n      setError('');\r\n      const res = await api.get('/users');\r\n      setUsers(res.data || []);\r\n    } catch (err) {\r\n      setError(err?.response?.data?.message || err?.message || 'Network Error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const addUser = useCallback(async (payload) => {\r\n    const res = await api.post('/users', payload);\r\n    // Refresh list after add\r\n    await fetchUsers();\r\n    return res.data;\r\n  }, [fetchUsers]);\r\n\r\n  const updateUser = useCallback(async (id, payload) => {\r\n    const res = await api.put(`/users/${id}`, payload);\r\n    await fetchUsers();\r\n    return res.data;\r\n  }, [fetchUsers]);\r\n\r\n  const deleteUser = useCallback(async (id) => {\r\n    const res = await api.delete(`/users/${id}`);\r\n    await fetchUsers();\r\n    return res.data;\r\n  }, [fetchUsers]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    // Listen for auth login events so we refetch when a user logs in (useful for admin)\r\n    const onAuthLogin = () => fetchUsers();\r\n    window.addEventListener('auth:login', onAuthLogin);\r\n    return () => window.removeEventListener('auth:login', onAuthLogin);\r\n  }, [fetchUsers]);\r\n\r\n  return (\r\n    <UsersContext.Provider value={{ users, loading, error, fetchUsers, addUser, updateUser, deleteUser }}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useUsers() {\r\n  const ctx = useContext(UsersContext);\r\n  if (!ctx) throw new Error('useUsers must be used within UsersProvider');\r\n  return ctx;\r\n}\r\n\r\nexport default UsersContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}